let User,hashPassword,comparePassword;_2b1‍.x([["register",()=>register]]);_2b1‍.w("../models/user",[["default",["User"],function(v){User=v}]]);_2b1‍.w("../utils/auth",[["hashPassword",["hashPassword"],function(v){hashPassword=v}],["comparePassword",["comparePassword"],function(v){comparePassword=v}]]);


       const register = async (req,res)=>{
try{
// console.log(req.body);
const {name,email,password}=req.body;
// validation
if(!name) return res.status(400).send("Name is required")
if(!password||password.length<6){
    return res
    .status(400)
    .send("Password is required and should be min 6 characters long");
}
let userExist = await User.findOne({email}).exec();
if(userExist) return res.status(400).send("Email is taken");

// hash password
const hashedPassword = await hashPassword(password);

// register
const user = new User({
    name,
    email,
    password: hashedPassword,

});
await user.save();
_2b1‍.g.console.log("Saved user ", user);
return res.json({ok: true});
}catch(err){
    _2b1‍.g.console.log(err);
    return res.status(400).send("Error. Try again");
}
}